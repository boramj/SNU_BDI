plot(mpg~disp,data=mtcars)
fit <- lm(mpg~disp,data=mtcars)
class(fit) #  lm 클래스라고 뜨는데 이건 s3 클래스
fit1 <- unclass(fit)
class(fit1)
class(fit1) <- 'mylm'  # 새로운 클래스 이름을 만들어줌, lm클래스도 이와 마찬가지로 명명된 클래스
fit1
class(fit1)
plot(fit)
library(FNN)
install.packages('FNN')
library(FNN)
knnx.index(x,0,k=10)
idx <- c(knnx.index(x,0,k=10))
yhat <- mean(y[idx])
eval.point = 0
plot(x,y, pch=20)
abline(v = 0, col='black')
idx <- c(knnx.index(x,eval.point,k=10))
points(x[idx],y[idx],col='red',pch=20)
abline(h=mean(y[idx],lty=2, col = 'red'))
mean(y[idx])
knnx.index(x,0,k=10)
x = rnorm(100)
y = 2+2*x +rnorm(100)
plot(x,y,main='plot (X-y)-1',pch=20)
dev.off()
set.seed(1)
x <- sort(rnorm(100))
y <- 3+x^2+rnorm(100)
plot(x,y,pch=20)
fit <- lm(y~x)
fit
abline(a = fit$coefficients[1], b = fit$coefficients[2], col = 'blue')
i
yTrueMean <- 3+x^2
lines(x,yTrueMean,lty=2,col='black')
install.packages('FNN')
install.packages("FNN")
library(FNN)
knnx.index(x,0,k=10)
idx <- c(knnx.index(x,0,k=10))
yhat <- mean(y[idx])
eval.point = 0
plot(x,y, pch=20)
abline(v = 0, col='black')
idx <- c(knnx.index(x,eval.point,k=10))
points(x[idx],y[idx],col='red',pch=20)
abline(h=mean(y[idx],lty=2, col = 'red'))
mean(y[idx])
knnx.index(x,0,k=10)
idx <- c(knnx.index(x,0,k=10))
yhat <- mean(y[idx])
eval.point = 1
plot(x,y, pch=20)
abline(v = 0, col='black')
idx <- c(knnx.index(x,eval.point,k=10))
points(x[idx],y[idx],col='red',pch=20)
abline(h=mean(y[idx],lty=2, col = 'red'))
mean(y[idx])
eval.n = 100
eval.point = seq(-3,3,length=eval.n)
plot(x,y,pch = 20)
idx.mat
install.packages('scatterplot3d')
library(scatterplot3d)
install.packages('rgl')
library(rgl)
library(rgl)
library(rgl)
install.packages('scatterplot3d')
install.packages("scatterplot3d")
library(scatterplot3d)
install.packages('rgl')
library(rgl)
00
eval.point = seq(-3,3,length=eval.n)
plot(x,y,pch = 20)
idx.mat
.n = 100
eval.point = seq(-3,3,length=eval.n)
plot(x,y,
eval.n = 100
eval.point = seq(-3,3,length=eval.n)
plot(x,y,pch = 20)
idx.mat
install.packages('rgl')
library(rgl)
attach(mtcars)
plot3d(wt,disp,mpg,col='red',size=3)
library(rgl)
plot3d(wt,disp,mpg,col='red',size=3)
mypal= c('blue','red','green')
class(mtcars$cyl)
factor(mtcars$cyl)
a <- mypal[factor(mtcars$cyl)]
plot3d(wt,disp,mpg,col= a)
library(rgl)
z <- 2 * volcano
x <- 10 *(1:nrow(z))
y <- 10 *(1:nrow(z))
par(bg = 'slategray')
persp(x,y,z,theta = 135,phi = 30,col = 'green3',scale=FALSE,ltheta= -120,shade = 0.75,border = NA, box = FALSE)
data(rgl)
z <- 2 * Volcano
z <- 2 * volcano
z <- 2 * volcano
View(z)
z <- 2 * volcano
x <- 10 *(1:nrow(z))
y <- 10 *(1:nrow(z))
par(bg = 'slategray')
persp(x,y,z,theta = 135,phi = 30,col = 'green3',scale=FALSE,ltheta= -120,shade = 0.75,border = NA, box = FALSE)
z <- 2 * volcano
x <- 10 *(1:nrow(z))
y <- 10 *(1:nrow(z))
par(bg = 'slategray')
persp(x,y,z,theta = 135,phi = 30,col = 'green3',scale=FALSE,ltheta= -120,shade = 0.75,border = NA, box = FALSE)
persp(x, y, z, theta = 135, phi = 30, col = "green3", scale = FALSE,
ltheta = -120, shade = 0.75, border = NA, box = FALSE)
setwd("/Users/arnorfati/Documents/GitHub/SNU_BDI/탐색적분석_시각화")
getwd() # 현재 작업 경로 보여줌
a <- c(1:10)
rm(list=ls()) # 워크스페이스의 객체 지우기
gc() # 메모리 정리
pdf("example.pdf") # pdf 그래픽 디바이스 열기 (작업 디렉토리에 xh라는 파일을 만들어 그곳에 그림을 그림)
hist(rnorm(100))
dev.off()
b <- c(12,NA,32,11,32) # NA는 결측값
mean(b)
mean(b)
mean(x, na.rm=TRUE )
mean(x, na.rm=TRUE )
mean(b)
mean(x, na.rm=TRUE )
x <- c(12,NA,32,11,32) # NA는 결측값
mean(x)
mean(x, na.rm=TRUE )
library(rgl)
z <- 2 * volcano
x <- 10 *(1:nrow(z))
y <- 10 *(1:nrow(z))
par(bg = 'slategray')
persp(x,y,z,theta = 135,phi = 30,col = 'green3',scale=FALSE,ltheta= -120,shade = 0.75,border = NA, box = FALSE)
persp(x, y, z, theta = 135, phi = 30, col = 'green3', scale = FALSE, ltheta = -120, shade = 0.75, border = NA, box = FALSE)
persp(x, y, z, theta = 135, phi = 30, col = "green3", scale = FALSE, ltheta = -120, shade = 0.75, border = NA, box = FALSE)
par(bg = 'slategray')
persp(x, y, z, theta = 135, phi = 30, col = 'green3', scale = FALSE, ltheta = -120, shade = 0.75, border = NA, box = FALSE)
library(rgl)
z <- 2 * volcano # Exaggerate the relief
x <- 10 * (1:nrow(z)) # 10 meter spacing (S to N)
y <- 10 * (1:ncol(z)) # 10 meter spacing (E to W)
par(bg = "slategray")
persp(x, y, z, theta = 135, phi = 30, col = "green3", scale = FALSE,
ltheta = -120, shade = 0.75, border = NA, box = FALSE)
z <- 2 * volcano
x <- 10 *(1:nrow(z))
y <- 10 *(1:ncol(z))
par(bg = 'slategray')
par(bg = "slategray")
persp(x, y, z, theta = 135, phi = 30, col = 'green3', scale = FALSE, ltheta = -120, shade = 0.75, border = NA, box = FALSE)
persp3d(x, y, z, col = "green3")
