table(xx)
table(x)
tabulate(a)
tabulate(x)
x
table(x)
tabulate(x)
par(cex=1.3)
install.packages("ggplot")
install.packages("ggplot2")
help("ggplot")
help(ggplot2)
help('ggplot2')
library(ggplot2)
help("ggplot2")
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()
# 만일 저장 후 불러왔을 때 한글이 깨지면 인코딩을 확인
x <- 1:10
y <- seq(1,10)
x
y
int(x)
mode(x)
mode(y)
x <- 1:10
mode(x)
class(x)
class(y)
x <- ("안녕하세요 반갑습니다")
ㅌ
x
x <- c(1,0,1,1,0,0,1,1,1,1,1)
x
x <- as.logical(x)
x
data("diamonds")
data()
data.co2 <- data(CO2)
data.co2
data.co2 <- CO2
data.co2
summary(data.co2)
table(data.co2$Type)
a <- c(12.3,11.2,10.3,10.9,10.5,11.2)
table(a) <- b
table(a) -> b
b
tabulate(a) -> c
c
x <- c(1,2,3,4,4,4,1,2,2,3)
if(x=2){y=1}
if(x=2){y=1}
if(x=2){ y=1}
if(x=2){
if(x = 2) {
x = 3
if (x =! 2) {}
if (x > 2) {}
if (x > 2) {
if (x == 2) {
table(iris$Species)
library(xlsx)
library(rJava)
dbiinom(3,siez=5,prob=0.1)
dbinom(3,siez=5,prob=0.1)
dbinom(3,size=5,prob=0.1)
sum(dbinom(0:5,size=20,prob=0.1))
rnorm(100,mean=0,1)
rnorm(100)
rnorm(100)
a <- rnorm(100)
library(ggplot2)
myFamilyNames = c("Dad","Mom","Sis","Bro","Dog")
myFamilyAges = c(43, 42, 12, 8, 5)
myFamilyGenders = c("Male","Female","Female","Male","Female")
myFamilyWeights = c(188,136,83,61,44)
myFamily <- data.frame(myFamilyNames, myFamilyAges, myFamilyGenders, myFamilyWeights)
myFamily
myFamily <- colnames(Names,Age,Genders,Weights)
str(mtFamily)
str(myFamily)
help(colnames)
class(myFamily)
class(myFamily$myFamilyAges)
level(myFamilyGenders)
myFamily$myFamilyNames <- as.character(myFamily$myFamilyNames)
str(myFamily)
summary(myFamily)
myFamily[,2]
iris
head(iris)
str(iris)
ggplot(iris$Sepal.Length,iris$Sepal.Length)
gglots(iris$Sepal.Length,iris$Sepal.Length)
gglot
ggplot2(iris$Sepal.Length,iris$Sepal.Length)
ggplot(iris,iris$Sepal.Length,iris$Sepal.Width)
ggplot(iris$Sepal.Length,iris$Sepal.Width)
iris[1:15,]
seaosa <- iris[1:50,]
seaosa
sesosa <- setosa
sesosa -> setosa
esaosa <- setosa
esaosa -> setosa
seaosa -> setosa
dbinom(3,5,0.1)
dbinom(0:6,6,0.5)
pbinom(5,20,10)
pbinom(5,20,0.1)
1- bpinom(3,20,0.1)
1- pbinom(3,20,0.1)
rbinom(20,10,0.2)
a <- rbinom(20,10,0.2)
average(a)
mean(a)
pbinom(20,10,0.2)
pbinom(3,10,0.2)
dunif(1,0,10)
punif(1,0,2)
punif(2,0,2)
punif(0.3,0,2)
punif(0.4,0,2)
punif(0.5,0,2)
punif(0.8,0,2)
punif(0.8,0,2)
dnorm(14,20,2)
dnorm(19,20,2)
dnorm(20,20,2)
dnorm(0,0,1)
rnorm(20,0,1)
kor <- c(42,38,51,53,40,37,41,29,52,39,45,34,47,35,44,48,47,30,34)
eng <- c(30,25,34,35,31,29,33,23,36,30,32,29,34,30,28,29,33,24,30,30)
length(eng)
kor <- c(42,38,51,53,40,37,41,29,52,39,45,34,47,35,44,48,47,30,29,34)
kor
eng
cor.test(kor,eng)
cor.test(kor,eng,conf.level = 0.99)
lm(eng~kor)
summary <- lm(eng~kor)
result <- lm(eng~kor)
summary(result)
(0.7567478)^2
anova(result)
132.716/(132.716+99.034)
sxx <- sum(year^2) - 12*(mean(year)^2)
t0 <- (car_lm$coefficients[2]-(-0.8))/(sqrt(anova(car_lm)["Residuals","Mean Sq"]/sxx))
t0; t0 <= qt(0.05,10)
car_lm <- lm(price~year); summary(car_lm )
sxx <- sum(year^2) - 12*(mean(year)^2)
t0 <- (car_lm$coefficients[2]-(-0.8))/(sqrt(anova(car_lm)["Residuals","Mean Sq"]/sxx))
t0; t0 <= qt(0.05,10)
year <- c(1,1.5,2,2,3,3,3.2,4,4.5,5,5,5.5)
price <- c(4.5,4,3.2,3.4,2.5,2.3,2.3,1.6,1.5,1,0.8,0.4)
car_lm <- lm(price~year); summary(car_lm )
sxx <- sum(year^2) - 12*(mean(year)^2)
t0 <- (car_lm$coefficients[2]-(-0.8))/(sqrt(anova(car_lm)["Residuals","Mean Sq"]/sxx))
t0; t0 <= qt(0.05,10)
sxx
t0
t0 <= qt(0.05,10)
t0 <= qt(0.10,10)
qt(0.05,10)
car_lm
car_lm$coefficients
car_lm$coefficients[2]
car_lm$coefficients[2] - 0.8
car_lm$coefficients[2] - (-0.8)
anova(car_lm)
cor_lm["Residuals"]
car_lm["Residuals","Mean Sq"]
anova(car_lm)["Residuals","Mean Sq"]
anova(car_lm)["Residuals"]
anova(car_lm)
anova(car_lm)["Residuals"]
anova(car_lm)[Mean Sq"]
anova(car_lm)["Mean Sq"]
anova(car_lm)["Residuals",]
lm1 <- lm(price~year); summary(lm1 )
lm1$coefficients[2]
lm1$coefficients[1]
data.frame("year"=2.5)
predict(lm1,newdata=data.frame("year"=2.5),intervel="confidence")
predict(lm1,newdata=data.frame("year"=2.5),intervel="prediction")
predict(lm1,newdata=data.frame("year"=2.5),interval="prediction")
predict(lm1,newdata=data.frame("x"=2.5),interval="prediction")
x
newdata
confint(car_lm)
confint(car_lm,conf.level=0.94)
car_lm
year <- c(1,1.5,2,2,3,3,3.2,4,4.5,5,5,5.5)
price <- c(4.5,4,3.2,3.4,2.5,2.3,2.3,1.6,1.5,1,0.8,0.4)
?confint
confint(lm1,level=0.99)
plot(restudent(lm1))
plot(rstudent(lm1))
length(iris)
iris
lm(Sepal.Width~.,data=iris)
lm2 <- lm(Sepal.Width~.,data=iris)
summary(lm2)
library(MASS)
data(Boston)
Boston
summary(Boston)
a <- lm(medv~.,data=Boston)
a
step(a,direction="backward")
step(a,direction="forward")
step(a,scope=(~1,~.),direction="forward")
step(a,scope=(lower=~1,upper=~.),direction="forward")
step(a,scope=(lower=~1,upper=~.),direction="forward")
step(lm(medv ~1,data=Boston),scope=(lower=~1,upper=~.),direction="forward")
step(a,scope=(),direction="forward")
?step
step(a,direction="forward")
step(a,direction="both")
lm(nedv~1,Boston)
lm(medv~1,Boston)
step(lm(nedv~1,Boston),direction="forword")
step(lm(medv~1,Boston),direction="forword")
step(lm(medv~1,Boston),direction="forwrd")
step(lm(medv~1,Boston),direction="forward")
step(lm(medv~.,Boston),direction="forward")
step(lm(medv~.,Boston),scope=list(lower=~1,upper=~.),direction="forward")
t0 <- (lm1$coefficients[2]-(-0.8))/(sqrt(anova(lm1)["Residuals","Mean Sq"]/sxx))
t0
qt(0.95,10)
qt(0.05,10)
iris_lm <- lm(Sepal.Width~Pental.Length+Sepal.Lenth+Petal.Width,iris)
iris_lm <- lm(Sepal.Width~Petal.Length+Sepal.Lenth+Petal.Width,iris)
iris_lm <- lm(Sepal.Width~Petal.Length+Sepal.Length+Petal.Width,iris)
plot(iris_lm)
5
par(c(2,2))
par(nfrow=c(2,2))
par(mfrow=c(2,2))
plot(iris_lm)
library(rgl)
library(rgl)
plot3d(wt,disp,mpg,col='red',size=3)
attach(mtcars)
plot3d(wt,disp,mpg,col='red',size=3)
mypal= c('blue','red','green')
class(mtcars$cyl)
factor(mtcars$cyl)
a <- mypal[factor(mtcars$cyl)]
plot3d(wt,disp,mpg,col= a)
library(rgl)
z <- 2 * volcano
x <- 10 *(1:nrow(z))
y <- 10 *(1:nrow(z))
par(bg = 'slategray')
persp(x,y,z,theta = 135,phi = 30,col = 'green3',scale=FALSE,ltheta= -120,shade = 0.75,border = NA, box = FALSE)
z <- 2 * volcano # Exaggerate the relief
x <- 10 * (1:nrow(z)) # 10 meter spacing (S to N)
y <- 10 * (1:ncol(z)) # 10 meter spacing (E to W)
par(bg = "slategray")
par(bg = "slategray")
persp(x, y, z, theta = 135, phi = 30, col = "green3", scale = FALSE,
ltheta = -120, shade = 0.75, border = NA, box = FALSE)
persp3d(x, y, z, col = "green3")
par(bg = 'slategray')
persp(x,y,z,theta = 135,phi = 30,col = 'green3',scale=FALSE,ltheta= -120,shade = 0.75,border = NA, box = FALSE)
setwd("/Users/arnorfati/Documents/GitHub/SNU_BDI/탐색적분석_시각화")
if (!require(plotrix)) install.packages("plotrix")
if (!require(vioplot)) install.packages("vioplot")
if (!require(vcd)) install.packages("vcd")
library(plotrix)
library(vioplot)
library(vcd)
library(vcd)
counts = table(state.region)
counts
setwd("/Users/arnorfati/Documents/GitHub/SNU_BDI/탐색적분석_시각화")
barplot(counts)
cyl <- mtcars$cyl
barplot(cyl)
freq.cyl <- table(cyl)
barplot(freq.cyl)
cyl.name <- c('4 cyl','6 cyl', '8 cyl')
barplot(freq.cyl,main = 'simple car chart', col = 'orange',names.arg = cyl.name)
cyl.name2 <- paste0(cyl.name,"(",freq.cyl,"%)")
cyl.name2
cyl.name2 <- paste0(cyl.name,"(",freq.cyl,"%)")
cyl.name2
paste = (a,b)
paste = ('a','b')
paste('a','b')
paste('a','b',sep='')
paste('a','b',sep='_')
paste0('4 cyl','(',30,'%)')
paste0(c('4 cyl','6 cyl'),'(',30,'%)')
paste0(c('4 cyl','6 cyl'),'(',c(30,20),'%)')
pie(freq.cyl, labels = cyl.name2, col = rainbow(length(freq.cyl)), main='pie chart')
rainbow(10)
rainbow(10)
a <- c('a')*20
b <- c(rep(10,20))
bb <- cbind(a,b)
a <- c('a')*20
hist(b)
fan.plot(freq.cyl, labels = cyl.name2, main = 'Fan plot')
library(plotrix)
pie3D(freq.cyl,labels = cyl.name2,explode = 0.1)
library(vcd)
head(Arthiritis, 3)
head(Arthritis, 3)
str(Arthritis)
my.table <- xtabs(~ Treatment+Improved, data = Arthritis)
my.table
dim(Arthritis)
barplot(my.table, xlab = 'improved', ylab = 'Frequency', legend.txt = TRUE,col= c('green','red'))
barplot(t(my.table), xlab = 'improved', ylab = 'Frequency', legend.txt = TRUE,col= c('green','red'))
barplot(t(my.table), xlab = 'improved', ylab = 'Frequency', legend.txt = TRUE,col= c('green','red','orange'))
my.tabke
my.tabke
my.table
t(my.table)
belt <- matrix(c(52,2,8,16), ncol = 2, dimnames = list(parent = tmp,child = tmp))
blet
belt
tmp <- c('buckled','unbuckled')
belt <- matrix(c(52,2,8,16), ncol = 2, dimnames = list(parent = tmp,child = tmp))
belt
spine(belt, main='spine plot for child seat-belt usage',gp = gpar(fill = c('green,'red'')))
spine(belt, main='spine plot for child seat-belt usage',gp = gpar(fill = c('green','red'')))
spine(belt, main='spine plot for child seat-belt usage',gp = gpar(fill = c('green','red'')))
)
spine(belt, main='spine plot for child seat-belt usage',gp = gpar(fill = c('green','red')))
x <- rnorm(100)
boxplot(x,main = 'boxplot', col = 'lightblut')
x <- rnorm(100)
boxplot(x,main = 'boxplot', col = 'lightblut')
boxplot(x,main = 'boxplot', col = 'lightblue')
x <- rnorm(100)
boxplot(x,main = 'boxplot', col = 'lightblue')
x <- rnorm(100)
boxplot(x,main = 'boxplot', col = 'lightblue')
x <- rnorm(100)
boxplot(x,main = 'boxplot', col = 'lightblue')
x
hist(faithful@waiting,nclass = 8)
x <- faithful$waiting
hist(faithful@waiting,nclass = 8)
x
hist(faithful@waiting,nclass = 8)
x = faithful$waiting
hist(faithful$waiting, nclass = 8)
hist(faithful@waiting, nclass = 8)
host(faithful$waiting, breaks = seq(min(x),max(x),length = 10), probability = T)
hist(faithful$waiting, breaks = seq(min(x),max(x),length = 10), probability = T)
hist(faithful$waiting, nclass = 8)
hist(faithful$waiting, breaks = seq(min(x),max(x),length = 10), probability = T)
lines(density(x),col = 'red', lwd =2)
summary(x)
hist(faithful$waiting, nclass = 8)
lines(density(x),col = 'red', lwd =2)
hist(faithful$waiting, nclass = 8)
lines(density(x),col = 'red', lwd =2)
hist(faithful$waiting, breaks = seq(min(x),max(x),length = 10), probability = T)
lines(density(x),col = 'red', lwd =2)
hist(faithful$waiting, nclass = 8,probability = T)
lines(density(x),col = 'red', lwd =2)
install.packages(vioplot)
install.packages('vioplot')
install.packages("vioplot")
?rpois
library(vioplot)
install.packages()
install.packages('sm')
install.packages("sm")
library(sm)
library(vioplot)
vioplot(x)
attach(mtcars)
boxplot(mpg~cyl, data = mtcars, names = c('4 cyl', '6 cyl', '8 cyl'))
hist(mpg[cyl==4], xlab='MPG', main = 'MPG dis by cylinder', xlim= c(5,40), ylim = c(0,10),col = 'lightblue')
hist(mpg[cyl==6], xlab='MPG', main = 'MPG dis by cylinder', xlim= c(5,40), ylim = c(0,10),col = 'orange')
hist(mpg[cyl==8], xlab='MPG', main = 'MPG dis by cylinder', xlim= c(5,40), ylim = c(0,10),col = 'red')
par(mfrow = c(3,1))
hist(mpg[cyl==4], xlab='MPG', main = 'MPG dis by cylinder', xlim= c(5,40), ylim = c(0,10),col = 'lightblue')
hist(mpg[cyl==6], xlab='MPG', main = 'MPG dis by cylinder', xlim= c(5,40), ylim = c(0,10),col = 'orange')
hist(mpg[cyl==8], xlab='MPG', main = 'MPG dis by cylinder', xlim= c(5,40), ylim = c(0,10),col = 'red')
hist(mpg[cyl==4], xlab='MPG', main = 'MPG dis by cylinder', ylim = c(0,10),col = 'lightblue')
hist(mpg[cyl==6], xlab='MPG', main = 'MPG dis by cylinder', ylim = c(0,10),col = 'orange')
hist(mpg[cyl==8], xlab='MPG', main = 'MPG dis by cylinder', ylim = c(0,10),col = 'red')
hist(mpg[cyl==4], xlab='MPG', main = 'MPG dis by cylinder', ylim = c(0,10),col = 'lightblue')
hist(mpg[cyl==6], xlab='MPG', main = 'MPG dis by cylinder', ylim = c(0,10),col = 'orange')
hist(mpg[cyl==8], xlab='MPG', main = 'MPG dis by cylinder', ylim = c(0,10),col = 'red')
?legend
?legend
plot(1:20,y = rep(0,20), col = 1:20,cex=3, pch= 20)
head(color)
head(colors)
head(colors())
mycol = colors()
plot(1:80,y=rep(1,80),col=mycol[1:80],cex = 2,pch= 20, ylim = c(0,1))
point(1:80, y=rep(0.5,80),col=mycol[81:160],cex = 2,pch= 20,)
points(1:80, y=rep(0.5,80),col=mycol[81:160],cex = 2,pch= 20,)
points(1:80, y=rep(0.5,80),col=mycol[161:240],cex = 2,pch= 20,)
points(1:80, y=rep(0.5,80),col=mycol[161:240],cex = 2,pch= 20)
points(1:80, y=rep(0.5,80),col=mycol[81:160],cex = 2,pch= 20)
plot(1:80,y=rep(1,80),col=mycol[1:80],cex = 2,pch= 20, ylim = c(0,1))
plot(1:80,y=rep(1,80),col=mycol[1:80],cex = 2,pch= 20, ylim = c(0,1))
par(mfrow = 0)
par(mfrow = c(1,1))
plot(1:80,y=rep(1,80),col=mycol[1:80],cex = 2,pch= 20, ylim = c(0,1))
points(1:80, y=rep(0.5,80),col=mycol[81:160],cex = 2,pch= 20)
points(1:80, y=rep(0.5,80),col=mycol[161:240],cex = 2,pch= 20)
points(1:80, y=rep(0.5,80),col=mycol[81:160],cex = 2,pch= 20)
plot(1:80,y=rep(1,80),col=mycol[1:80],cex = 2,pch= 20, ylim = c(0,1))
points(1:80, y=rep(0.5,80),col=mycol[81:160],cex = 2,pch= 20)
points(1:80, y=rep(0,80),col=mycol[161:240],cex = 2,pch= 20)
image(matrix(1:25^2,25,25),col=mycol)
heat.colors(4,alpja =1)
heat.colors(4,alpha =1)
topo.colors(4,alpha=1)
plot(1:4,0,col = a)
plot(1:4,rep(0,4),col = a)
plot(1:4,rep(0,4),col = a, pch =20)
a <- heat.colors(4,alpha =1)
plot(1:4,rep(0,4),col = a, pch =20)
a <- heat.colors(100,alpha =1)
plot(1:4,rep(0,4),col = a, pch =20)
plot(1:100,rep(0,100),col = a, pch =20)
b <- topo.colors(4,alpha=1)
b <- topo.colors(100,alpha=1)
plot(1:100,rep(0,100),col = a, pch =20)
plot(1:100,rep(0,100),col = b, pch =20)
b <- topo.colors(100,alpha=1)
plot(1:100,rep(0,100),col = b, pch =20)
b <- topo.colors(200,alpha=1)
plot(1:200,rep(0,200),col = b, pch =20)
image(x,y,volcano,col = heat.colors(20,alpha = 1), axes = F)
x <- 10*(1:nrow(volcano))
y <- 10*(1:ncol(volcano))
image(x,y,volcano,col = heat.colors(20,alpha = 1), axes = F)
contour(x,y,volcano,levels= seq(90,200,by = 5), add = TRUE,col = 'while')
contour(x,y,volcano,levels= seq(90,200,by = 5), add = TRUE,col = 'whtle')
contour(x,y,volcano,levels= seq(90,200,by = 5), add = TRUE,col = 'white')
install.packages('colorspace')
library(colorspace)
pal = choose_palette()
mycol <- pal(30)
plot(1:30,rep(0,30),col = mycol,pch=20)
pal = choose_palette()
mycol <- pal(30)
mycol <- pal(150)
image(x,y,volcano,col = mycol, axes = F)
contour(x,y,volcano,levels= seq(90,200,by = 5), add = TRUE,col = 'white')
surveys <- read.csv('surveys.csv')
class(surveys)
names(surveys)
summary(surveys)
str.surveys
str(surveys)
for (i in 1:10) eval ( parse (text = paste0("fit",i,"<- i")) )
ls()
match(c('plot_id','species_id','weight'), name(surveys))
match(c('plot_id','species_id','weight'), names(surveys))
surveys[,match(c('plot_id','species_id','weight'), names(surveys))]
surveys[.c('plot_id','species_id','weight')]
surveys[,c('plot_id','species_id','weight')]
surveus['plot_id','species_id','weight']
surveys['plot_id','species_id','weight']
surveys[c('plot_id','species_id','weight')]
surveys$year == 1995
surveys[surveys$year == 1995,]
head(surveys[surveys$year == 1995,])
surveys[weight < 5]
surveys[surveys$weight < 5]
surveys[surveys$weight < 5,]
surveys[surveys$weight < 5,c('speices_id','sex','weight')]
surveys[surveys$weight<5, c("species_id", "sex", "weight")]
head(surveys[surveys$weight<5, c("species_id", "sex", "weight")])
surveys[which(surveys$weight<5), c("species_id", "sex", "weight")]
head(surveys[which(surveys$weight<5), c("species_id", "sex", "weight")])
head(surveys[which(surveys$weight<5), c("species_id", "sex", "weight")])
head(surveys[surveys$weight<5, c("species_id", "sex", "weight")])
surveys$weight<5
surveys$weight
surveys[surveys$weight < 5,c('speices_id','sex','weight')]
surveys[surveys$weight < 5, c('species_id','sex','weight')]
surveys[which(surveys$weight<5),c('species_id','sex','weight')]
u <- unique(surveys@sex)
length(u)
u <- unique(surveys@sex)
u <- unique(surveys$sex)
length(u)
class(surveys$sex)
levels(surveys$sex)
u
mean(surveys$weight[surveys$sex == u[1]],na.rm=T)
mean(surveys$weight[surveys$sex == u[2]],na.rm=T)
mean(surveys$weight[surveys$sex == u[3]],na.rm=T)
arggregate(formula = weights ~ sex, data = surveys, FUN = mean, na.rm= TRUE)
aggregate(formula = weights ~ sex, data = surveys, FUN = mean, na.rm= TRUE)
aggregate(formula = weight ~ sex, data = surveys, FUN = mean, na.rm= TRUE)
a <- c(100,200,300,400,500,600)
b <- c(600,200,500,200,200,200)
c <- c(700,500,400,400,200,100)
mean(a); mean(b);mean(c)
0.7*150 + 0.3*50 ;  0.7*125+0.3*75
0.7*150 +0.3*75
A <- mean(a);B <- mean(b);C <- mean(c)
B-C
C-B
0.48*(-75)+0.52*(-150)
